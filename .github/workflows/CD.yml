name: CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  BuildAndTest:
    name: build, test and codecoverage
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        dotnet-version: ['5.0.x' ,'3.1.x']

    steps:
    - name: Check out Repo
      uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
          dotnet-version: 5.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build debug version
      run: dotnet build --configuration Debug --no-restore
    
    - name: Run unittest with codecoverage
      run: dotnet test --no-build --verbosity normal --filter Category!=Integrationtest /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
    
    - name: Upload code coverage to Codecov
      uses: codecov/codecov-action@v1

  SecurityCheck: #todo parallel
    name: Security check (CodeQL)
    runs-on: ubuntu-latest
    needs: BuildAndTest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
      
  Deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [BuildAndTest,SecurityCheck]
    timeout-minutes: 10
    
    steps:
    - name: Check out Repo
      uses: actions/checkout@v2

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x #todo env var maken

      # Publish
    - name: publish nuget when newer version
      id: publish_nuget
      uses: rohith/publish-nuget@v2
      with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: EasyDbMigrator/EasyDbMigrator.csproj
          
          # NuGet package id, used for version detection & defaults to project name
          PACKAGE_NAME: EasyDbMigrator
          
          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          #VERSION_FILE_PATH: Directory.Build.props

          # Regex pattern to extract version info in a capturing group
          VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
          
          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
          # VERSION_STATIC: 1.0.0

          # Flag to toggle git tagging, enabled by default
          TAG_COMMIT: true

          # Format of the git tag, [*] gets replaced with actual version
          TAG_FORMAT: v*

          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}

          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          NUGET_SOURCE: https://api.nuget.org

          # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
          INCLUDE_SYMBOLS: false

